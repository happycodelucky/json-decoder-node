"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toURL = void 0;
const url_1 = require("url");
function toURL(value, strict = false) {
    if (value === undefined) {
        return undefined;
    }
    if (Array.isArray(value)) {
        if (strict) {
            throw new TypeError(`'${value}' does not represent a Boolean`);
        }
        if (value.length > 0) {
            return toURL(value[0], strict);
        }
        else {
            return undefined;
        }
    }
    if (typeof value === 'string') {
        try {
            return new url_1.URL(value);
        }
        catch (_a) { }
    }
    if (strict) {
        throw new TypeError(`${typeof value} cannot be converted to a URL`);
    }
    return undefined;
}
exports.toURL = toURL;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXJsLW1hcnNoYWxsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbWFyc2hhbGxlcnMvdXJsLW1hcnNoYWxsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkJBQXlCO0FBVXpCLFNBQWdCLEtBQUssQ0FBQyxLQUFVLEVBQUUsU0FBa0IsS0FBSztJQUNyRCxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7UUFDckIsT0FBTyxTQUFTLENBQUE7S0FDbkI7SUFHRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDdEIsSUFBSSxNQUFNLEVBQUU7WUFDUixNQUFNLElBQUksU0FBUyxDQUFDLElBQUksS0FBSyxnQ0FBZ0MsQ0FBQyxDQUFBO1NBQ2pFO1FBRUQsSUFBSSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNsQixPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUE7U0FDakM7YUFBTTtZQUNILE9BQU8sU0FBUyxDQUFBO1NBQ25CO0tBQ0o7SUFFRCxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtRQUMzQixJQUFJO1lBQ0EsT0FBTyxJQUFJLFNBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQTtTQUN4QjtRQUFDLFdBQU0sR0FBRztLQUNkO0lBRUQsSUFBSSxNQUFNLEVBQUU7UUFDUixNQUFNLElBQUksU0FBUyxDQUFDLEdBQUcsT0FBTyxLQUFLLCtCQUErQixDQUFDLENBQUE7S0FDdEU7SUFFRCxPQUFPLFNBQVMsQ0FBQTtBQUNwQixDQUFDO0FBN0JELHNCQTZCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVSTCB9IGZyb20gJ3VybCdcblxuLyoqXG4gKiBDb252ZXJ0cyBhIEpTT04gdmFsdWUgdG8gYW4gVVJMLCBpZiBwb3NzaWJsZS5cbiAqXG4gKiBAcGFyYW0gdmFsdWUgLSBhIHZhbHVlIHRvIGNvbnZlcnQgdG8gYW4gVVJMXG4gKiBAcGFyYW0gc3RyaWN0IC0gd2hlbiB0cnVlLCBwYXJzaW5nIGlzIHN0cmljdCBhbmQgdGhyb3dzIGEgVHlwZUVycm9yIGlmIHRoZSB2YWx1ZSBjYW5ub3QgYmUgY29udmVydGVkXG4gKlxuICogQHJldHVybiBBbiBVUkwsIG9yIHVuZGVmaW5lZCBpZiB0aGUgdmFsdWUgY291bGQgbm90IGJlIGNvbnZlcnRlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9VUkwodmFsdWU6IGFueSwgc3RyaWN0OiBib29sZWFuID0gZmFsc2UpOiBVUkwgfCB1bmRlZmluZWQge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9XG5cbiAgICAvLyBFeHRyYWN0IDAgaW5kZXggb2YgYW4gYXJyYXlcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKHN0cmljdCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgJyR7dmFsdWV9JyBkb2VzIG5vdCByZXByZXNlbnQgYSBCb29sZWFuYClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdG9VUkwodmFsdWVbMF0sIHN0cmljdClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFVSTCh2YWx1ZSlcbiAgICAgICAgfSBjYXRjaCB7IH1cbiAgICB9XG5cbiAgICBpZiAoc3RyaWN0KSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7dHlwZW9mIHZhbHVlfSBjYW5ub3QgYmUgY29udmVydGVkIHRvIGEgVVJMYClcbiAgICB9XG5cbiAgICByZXR1cm4gdW5kZWZpbmVkXG59XG4iXX0=