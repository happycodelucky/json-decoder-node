"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonValidatorPropertyValueError = exports.JsonValidatorPropertyUnsupportedError = exports.JsonValidatorPropertyMissingError = exports.JsonValidatorPropertyError = exports.JsonValidationError = void 0;
const json_decoder_errors_1 = require("./json-decoder-errors");
class JsonValidationError extends json_decoder_errors_1.JsonDecoderError {
}
exports.JsonValidationError = JsonValidationError;
class JsonValidatorPropertyError extends JsonValidationError {
    constructor(propertyPath, property, message) {
        super(message);
        this.property = property;
        this.propertyPath = propertyPath;
    }
}
exports.JsonValidatorPropertyError = JsonValidatorPropertyError;
class JsonValidatorPropertyMissingError extends JsonValidatorPropertyError {
}
exports.JsonValidatorPropertyMissingError = JsonValidatorPropertyMissingError;
class JsonValidatorPropertyUnsupportedError extends JsonValidatorPropertyError {
}
exports.JsonValidatorPropertyUnsupportedError = JsonValidatorPropertyUnsupportedError;
class JsonValidatorPropertyValueError extends JsonValidatorPropertyError {
    constructor(propertyPath, value, message) {
        super(propertyPath, propertyPath.split('.').pop(), message);
        this.value = value;
    }
}
exports.JsonValidatorPropertyValueError = JsonValidatorPropertyValueError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNvbi12YWxpZGF0aW9uLWVycm9ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9qc29uL2pzb24tdmFsaWRhdGlvbi1lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0RBQXdEO0FBUXhELE1BQXNCLG1CQUFvQixTQUFRLHNDQUFnQjtDQUFJO0FBQXRFLGtEQUFzRTtBQUt0RSxNQUFzQiwwQkFBMkIsU0FBUSxtQkFBbUI7SUFnQnhFLFlBQVksWUFBb0IsRUFBRSxRQUFnQixFQUFFLE9BQWU7UUFDL0QsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBRWQsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUE7UUFDeEIsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUE7SUFDcEMsQ0FBQztDQUNKO0FBdEJELGdFQXNCQztBQUtELE1BQWEsaUNBQWtDLFNBQVEsMEJBQTBCO0NBQUc7QUFBcEYsOEVBQW9GO0FBS3BGLE1BQWEscUNBQXNDLFNBQVEsMEJBQTBCO0NBQUc7QUFBeEYsc0ZBQXdGO0FBS3hGLE1BQWEsK0JBQWdDLFNBQVEsMEJBQTBCO0lBVzNFLFlBQVksWUFBb0IsRUFBRSxLQUFVLEVBQUUsT0FBZTtRQUN6RCxLQUFLLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFHLEVBQUUsT0FBTyxDQUFDLENBQUE7UUFFNUQsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUE7SUFDdEIsQ0FBQztDQUNKO0FBaEJELDBFQWdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpzb25EZWNvZGVyRXJyb3IgfSBmcm9tICcuL2pzb24tZGVjb2Rlci1lcnJvcnMnXG5cbi8vIFdlIGhhdmUgbW9yZSB0aGFuIDMgY2xhc3NlcywgdGhpcyBpcyBva1xuLy8gdHNsaW50OmRpc2FibGU6bWF4LWNsYXNzZXMtcGVyLWZpbGVcblxuLyoqXG4gKiBCYXNlIGVycm9yIGZvciBhbGwgdmFsaWRhdGlvbiBlcnJvcnNcbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEpzb25WYWxpZGF0aW9uRXJyb3IgZXh0ZW5kcyBKc29uRGVjb2RlckVycm9yIHsgfVxuXG4vKipcbiAqIEJhc2UgZXJyb3IgZm9yIGFsbCB2YWxpZGF0aW9uIHByb3BlcnR5IGVycm9yc1xuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgSnNvblZhbGlkYXRvclByb3BlcnR5RXJyb3IgZXh0ZW5kcyBKc29uVmFsaWRhdGlvbkVycm9yIHtcbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBuYW1lXG4gICAgICovXG4gICAgcmVhZG9ubHkgcHJvcGVydHk6IHN0cmluZ1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgcGF0aCBmcm9tIHRoZSByb290XG4gICAgICovXG4gICAgcmVhZG9ubHkgcHJvcGVydHlQYXRoOiBzdHJpbmdcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSBwcm9wZXJ0eVBhdGggLSBwYXRoIHRvIHByb3BlcnR5XG4gICAgICogQHBhcmFtIHByb3BlcnR5IC0gaW5kZXBlZGVudCBwcm9wZXJ0eSBuYW1lXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgLSBlcnJvciBtZXNzYWdlXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocHJvcGVydHlQYXRoOiBzdHJpbmcsIHByb3BlcnR5OiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZykge1xuICAgICAgICBzdXBlcihtZXNzYWdlKVxuXG4gICAgICAgIHRoaXMucHJvcGVydHkgPSBwcm9wZXJ0eVxuICAgICAgICB0aGlzLnByb3BlcnR5UGF0aCA9IHByb3BlcnR5UGF0aFxuICAgIH1cbn1cblxuLyoqXG4gKiBFcnJvciB3aGVuIHZhbGlkYXRpb24gZmluZHMgYSBtaXNzaW5nIHByb3BlcnR5IGRlY2xhcmF0aW9uXG4gKi9cbmV4cG9ydCBjbGFzcyBKc29uVmFsaWRhdG9yUHJvcGVydHlNaXNzaW5nRXJyb3IgZXh0ZW5kcyBKc29uVmFsaWRhdG9yUHJvcGVydHlFcnJvciB7fVxuXG4vKipcbiAqIEVycm9yIHdoZW4gdmFsaWRhdGlvbiBmaW5kcyBhIHByb3BlcnR5IG5vdCBzdXBwb3J0ZWQgYnkgdGhlIHNjaGVtYVxuICovXG5leHBvcnQgY2xhc3MgSnNvblZhbGlkYXRvclByb3BlcnR5VW5zdXBwb3J0ZWRFcnJvciBleHRlbmRzIEpzb25WYWxpZGF0b3JQcm9wZXJ0eUVycm9yIHt9XG5cbi8qKlxuICogRXJyb3Igd2hlbiB2YWxpZGF0aW9uIGZpbmRzIGEgcHJvcGVydHkgdmFsdWUgdG8gYmUgaW52YWxpZCBkZWNsYXJhdGlvblxuICovXG5leHBvcnQgY2xhc3MgSnNvblZhbGlkYXRvclByb3BlcnR5VmFsdWVFcnJvciBleHRlbmRzIEpzb25WYWxpZGF0b3JQcm9wZXJ0eUVycm9yIHtcbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSB2YWx1ZVxuICAgICAqL1xuICAgIHJlYWRvbmx5IHZhbHVlOiBhbnlcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSBwcm9wZXJ0eVBhdGggLSBwYXRoIHRvIHByb3BlcnR5XG4gICAgICogQHBhcmFtIHZhbHVlIC0gcHJvcGVydHkgdmFsdWVcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSAtIGVycm9yIG1lc3NhZ2VcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihwcm9wZXJ0eVBhdGg6IHN0cmluZywgdmFsdWU6IGFueSwgbWVzc2FnZTogc3RyaW5nKSB7XG4gICAgICAgIHN1cGVyKHByb3BlcnR5UGF0aCwgcHJvcGVydHlQYXRoLnNwbGl0KCcuJykucG9wKCkhLCBtZXNzYWdlKVxuXG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZVxuICAgIH1cbn0iXX0=