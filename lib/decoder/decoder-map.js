"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const decoder_declarations_1 = require("./decoder-declarations");
function decoderMapForTarget(target) {
    const map = Reflect.getOwnMetadata(decoder_declarations_1.DecoderMetadataKeys.decoderMap, target) ||
        Reflect.get(target, decoder_declarations_1.DecoderMetadataKeys.decoderMap);
    if (map) {
        return map;
    }
    Reflect.defineMetadata(decoder_declarations_1.DecoderMetadataKeys.decoderMap, {}, target);
    return Reflect.getOwnMetadata(decoder_declarations_1.DecoderMetadataKeys.decoderMap, target);
}
exports.decoderMapForTarget = decoderMapForTarget;
function decoderMapEntryForTarget(key, target) {
    const decoderMap = decoderMapForTarget(target);
    let entry = decoderMap[key];
    if (entry === undefined) {
        entry = {
            key,
        };
        decoderMap[key] = entry;
    }
    return entry;
}
exports.decoderMapEntryForTarget = decoderMapEntryForTarget;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb2Rlci1tYXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGVjb2Rlci9kZWNvZGVyLW1hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQU9BLGlFQUF3SDtBQW1DeEgsU0FBZ0IsbUJBQW1CLENBQUMsTUFBK0I7SUFDL0QsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQywwQ0FBbUIsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDO1FBQ3RFLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLDBDQUFtQixDQUFDLFVBQVUsQ0FBQyxDQUFBO0lBQ3ZELElBQUksR0FBRyxFQUFFO1FBQ0wsT0FBTyxHQUFHLENBQUE7S0FDYjtJQUdELE9BQU8sQ0FBQyxjQUFjLENBQUMsMENBQW1CLENBQUMsVUFBVSxFQUFFLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQTtJQUVsRSxPQUFPLE9BQU8sQ0FBQyxjQUFjLENBQUMsMENBQW1CLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBZSxDQUFBO0FBQ3ZGLENBQUM7QUFYRCxrREFXQztBQVNELFNBQWdCLHdCQUF3QixDQUFDLEdBQVcsRUFBRSxNQUErQjtJQUNqRixNQUFNLFVBQVUsR0FBRyxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUM5QyxJQUFJLEtBQUssR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDM0IsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1FBQ3JCLEtBQUssR0FBRztZQUNKLEdBQUc7U0FDTixDQUFBO1FBQ0QsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQTtLQUMxQjtJQUVELE9BQU8sS0FBSyxDQUFBO0FBQ2hCLENBQUM7QUFYRCw0REFXQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSBqc29uLWRlY29kZXJcbiAqXG4gKiBUeXBlIGFuZCBpbnRlcmZhY2VzIHRvIHN1cHBvcnQgZGVjb2RlciBtYXBwaW5nXG4gKi9cblxuaW1wb3J0IHsgSnNvbk9iamVjdCB9IGZyb20gJy4uL2pzb24vanNvbi1kZWNvZGFibGUtdHlwZXMnXG5pbXBvcnQgeyBEZWNvZGVyTWV0YWRhdGFLZXlzLCBEZWNvZGVyUHJvdG90eXBhbENvbGxlY3Rpb25UYXJnZXQsIERlY29kZXJQcm90b3R5cGFsVGFyZ2V0IH0gZnJvbSAnLi9kZWNvZGVyLWRlY2xhcmF0aW9ucydcblxuLyoqXG4gKiBEZWNvZGVyIG1hcCBhbGlhcyBlbnRyeSBpbiBhIGRlY29kZXIgY29uZmlndXJhdGlvbiBtYXBcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBEZWNvZGVyTWFwRW50cnkge1xuICAgIC8qKlxuICAgICAqIEpTT04gcHJvcGVydHkga2V5XG4gICAgICovXG4gICAga2V5OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBUeXBlIHRvIG1hcnNoYWwgYSBwcm9wZXJ0eSB2YWx1ZSB0b1xuICAgICAqL1xuICAgIHR5cGU/OiBvYmplY3QgJiAoRGVjb2RlclByb3RvdHlwYWxUYXJnZXQgfCBEZWNvZGVyUHJvdG90eXBhbENvbGxlY3Rpb25UYXJnZXQpXG4gICAgLyoqXG4gICAgICogTWFwIGZ1bmN0aW9uIHRha2luZyB0aGUgbWFyc2hhbGVkIHZhbHVlIChhcnJheSwgb2JqZWN0IG9yIHNjYWxhcikgYW5kIGFwcGxpZXMgYW5vdGhlciBsZXZlbCBvZiBtYXBwaW5nXG4gICAgICovXG4gICAgbWFwRnVuY3Rpb24/KHZhbHVlOiBhbnksIG9iamVjdDogSnNvbk9iamVjdCk6IGFueVxufVxuXG4vKipcbiAqIERlY29kZXIgY29uZmlndXJhdGlvbiBtYXBcbiAqIEEga2V5L2VudHJ5IHBhaXIgZm9yIHByb3BlcnRpZXMgdG8gbWFwIEpTT04gcHJvcGVydGllcyB0byBkZWNvZGVkIG9iamVjdCBwcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGVjb2Rlck1hcCBleHRlbmRzIFJlY29yZDxzdHJpbmcgfCBudW1iZXIgfCBzeW1ib2wsIERlY29kZXJNYXBFbnRyeSB8IHVuZGVmaW5lZD57XG5cbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBkZWNvZGVyIG1hcCBmb3IgYSBnaXZlbiB0YXJnZXQgY2xhc3MgdHlwZVxuICpcbiAqIEBwYXJhbSB0YXJnZXQgLSB0YXJnZXQgY29uc3RydWN0b3IgZnVuY3Rpb25cbiAqXG4gKiBAcmV0dXJuIGRlY29kZXIgbWFwIG9iamVjdCB0byBhc3NpZ24gSlNPTiBkZWNvZGluZyBjb25maWd1cmF0aW9uIHRvXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVyTWFwRm9yVGFyZ2V0KHRhcmdldDogRGVjb2RlclByb3RvdHlwYWxUYXJnZXQpOiBEZWNvZGVyTWFwIHtcbiAgICBjb25zdCBtYXAgPSBSZWZsZWN0LmdldE93bk1ldGFkYXRhKERlY29kZXJNZXRhZGF0YUtleXMuZGVjb2Rlck1hcCwgdGFyZ2V0KSB8fFxuICAgICAgICBSZWZsZWN0LmdldCh0YXJnZXQsIERlY29kZXJNZXRhZGF0YUtleXMuZGVjb2Rlck1hcClcbiAgICBpZiAobWFwKSB7XG4gICAgICAgIHJldHVybiBtYXBcbiAgICB9XG5cbiAgICAvLyBTZXQgYW4gZW1wdHkgZGVjb2RlciBtYXBcbiAgICBSZWZsZWN0LmRlZmluZU1ldGFkYXRhKERlY29kZXJNZXRhZGF0YUtleXMuZGVjb2Rlck1hcCwge30sIHRhcmdldClcblxuICAgIHJldHVybiBSZWZsZWN0LmdldE93bk1ldGFkYXRhKERlY29kZXJNZXRhZGF0YUtleXMuZGVjb2Rlck1hcCwgdGFyZ2V0KSBhcyBEZWNvZGVyTWFwXG59XG5cbi8qKlxuICogUmV0dXJucyBhIGRlY29kZXIgbWFwIGVudHJ5IGdpdmVuIGEgZW50cnkga2V5IGFuZCBhIHRhcmdldCBjbGFzcyB0eXBlXG4gKlxuICogQHBhcmFtIGtleSAtIHByb3BlcnR5IGtleSBvbiB0aGUgdGFyZ2V0XG4gKiBAcGFyYW0gdGFyZ2V0IC0gdGFyZ2V0IGNvbnN0cnVjdG9yIGZ1bmN0aW9uXG4gKiBAcGFyYW0gZGVjb2Rlck1hcCAtIGRlY29kZXIgbWFwIHRvIGFzc2lnbiB0byB0aGUgY2xhc3MgdHlwZVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2Rlck1hcEVudHJ5Rm9yVGFyZ2V0KGtleTogc3RyaW5nLCB0YXJnZXQ6IERlY29kZXJQcm90b3R5cGFsVGFyZ2V0KTogRGVjb2Rlck1hcEVudHJ5IHtcbiAgICBjb25zdCBkZWNvZGVyTWFwID0gZGVjb2Rlck1hcEZvclRhcmdldCh0YXJnZXQpXG4gICAgbGV0IGVudHJ5ID0gZGVjb2Rlck1hcFtrZXldXG4gICAgaWYgKGVudHJ5ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgZW50cnkgPSB7XG4gICAgICAgICAgICBrZXksXG4gICAgICAgIH1cbiAgICAgICAgZGVjb2Rlck1hcFtrZXldID0gZW50cnlcbiAgICB9XG5cbiAgICByZXR1cm4gZW50cnlcbn1cbiJdfQ==